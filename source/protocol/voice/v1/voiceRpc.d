// Generated by the gRPC-dlang plugin.

module protocol.voice.v1.voiceRpc;

import protocol.voice.v1.voice;
import google.protobuf.empty;

import grpc;
import google.protobuf;
import hunt.logging;

import core.thread;
import std.array;
import std.traits;


/**
 *
 */
class VoiceServiceClient
{
	this(Channel channel)
	{
		_channel = channel;
	}

	ClientReaderWriter!(Signal, ClientSignal) Connect(){
		mixin(CM3!(Signal, ClientSignal  , VoiceServiceBase.SERVICE));
	}

	private:
	Channel _channel;
}


/**
 *
 */
class VoiceServiceBase: GrpcService
{
	enum SERVICE  = "protocol.voice.v1.VoiceService";
	string getModule()
	{
		return SERVICE;
	}

	Status Connect(ServerReaderWriter!(ClientSignal, Signal)){ return Status.OK; }

	Status process(string method, GrpcStream stream, ubyte[] complete)
	{
		switch(method)
		{
			mixin(SM3!(ClientSignal, Signal , "Connect"));
			mixin(NONE());
		}
	}
}


